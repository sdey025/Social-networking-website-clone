[{"C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\index.js":"1","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\App.js":"2","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\Navbar.js":"4","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\Login.js":"5","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\Signup.js":"6","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\Home.js":"7","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\Profile.js":"8","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\CreatePost.js":"9","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\reducers\\userReducer.js":"10","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\UserProfile.js":"11"},{"size":500,"mtime":1606318951768,"results":"12","hashOfConfig":"13"},{"size":1722,"mtime":1607500079663,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1606318951768,"results":"15","hashOfConfig":"13"},{"size":1295,"mtime":1607501337036,"results":"16","hashOfConfig":"13"},{"size":2482,"mtime":1607238280962,"results":"17","hashOfConfig":"13"},{"size":2208,"mtime":1607111582414,"results":"18","hashOfConfig":"13"},{"size":6138,"mtime":1607502011669,"results":"19","hashOfConfig":"13"},{"size":2096,"mtime":1607590911937,"results":"20","hashOfConfig":"13"},{"size":2690,"mtime":1607235324522,"results":"21","hashOfConfig":"13"},{"size":419,"mtime":1607522980318,"results":"22","hashOfConfig":"13"},{"size":4510,"mtime":1607589943291,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8vfakk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\index.js",[],["53","54"],"C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\App.js",["55","56"],"import React, {useReducer,useEffect,createContext,useContext} from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport {BrowserRouter as Router, useHistory ,Switch, Route} from 'react-router-dom'\nimport Home from './Components/screens/Home';\nimport Login from './Components/screens/Login';\nimport Signup from './Components/screens/Signup';\nimport Profile from './Components/screens/Profile';\nimport CreatePost from './Components/screens/CreatePost';\nimport UserProfile from './Components/screens/UserProfile';\nimport {reducer,initialState} from './reducers/userReducer'\nexport const UserContext = createContext();\n//we are doing this to access the history of routing\nconst Routing = () => {\n  const history = useHistory()\n  const {state,dispatch} = useContext(UserContext)\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user) {\n      dispatch({type:'USER',payload:user})\n      history.push('/')\n    }else{\n      history.push('/signin')\n    }\n  }, [])\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home/>\n      </Route>\n      <Route path=\"/signin\">\n        <Login/>\n      </Route>\n      <Route path=\"/signup\">\n        <Signup/>\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile/>\n      </Route>\n      <Route path=\"/create\">\n        <CreatePost/>\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile/>\n      </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}} >\n      <Router>\n        <Navbar/>\n        <Routing/>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\Navbar.js",[],"C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\Login.js",["57","58","59","60"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nfunction Login() {\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    /* s */\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    //to make a network request\r\n \r\n    const Postdata = () =>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid Email\",classes:\"#d81b60 pink darken-1\"})\r\n        }else{\r\n        fetch('http://localhost:5000/signin',{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n                \r\n            },\r\n            body: JSON.stringify({\r\n                //we are writing on name because key and value both are same\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            if(data.error) {\r\n                M.toast({html: data.error,classes:\"#d81b60 pink darken-1\"})\r\n            }else{\r\n                localStorage.setItem('jwt',data.token)//storing jwt token into local storage\r\n                localStorage.setItem('user',JSON.stringify(data.user)) // storing user details into local storage\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                M.toast({html: \"Successfully Loggedin\",classes:\"#d81b60 pink darken-1\"})\r\n                history.push('/')\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card\">\r\n                <h2>SocialHub</h2>\r\n                <input type=\"text\" placeholder=\"Email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\r\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n                <button onClick={Postdata} className=\"waves-effect waves-light btn #ad1457 pink darken-3\">Login</button>\r\n                <h5>\r\n                    <Link to=\"/signup\">Don't have an account?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\Signup.js",["61","62"],"import React,{useState} from 'react'\r\nimport {Link , useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nfunction Signup() {\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    //to make a network request\r\n    const Postdata = () =>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid Email\",classes:\"#d81b60 pink darken-1\"})\r\n        }else{\r\n        fetch('http://localhost:5000/signup',{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name, //we are writing on name because key and value both are same\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data => {\r\n            if(data.error) {\r\n                M.toast({html: data.error,classes:\"#d81b60 pink darken-1\"})\r\n            }else{\r\n                M.toast({html: \"Successfully Registered\",classes:\"#d81b60 pink darken-1\"})\r\n                history.push('/signin')\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card\">\r\n                <h2>SocialHub</h2>\r\n                <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e)=>setName(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"Email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\r\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n                <button className=\"waves-effect waves-light btn #ad1457 pink darken-3\" onClick={Postdata}>Signup</button>\r\n                <h5>\r\n                    <Link to=\"/signin\">Already have an account?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\Home.js",["63","64","65","66","67","68","69"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom' \r\nimport M from 'materialize-css'\r\nfunction Home() {\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const [data, setdata] = useState([])\r\n    useEffect(() => {\r\n        fetch('/allpost',{\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            console.log(result) \r\n            setdata(result.posts)\r\n        })\r\n    }, [])\r\n    const likePost = (id) => {\r\n        fetch('/like',{\r\n            method:'put',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                postid:id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            const newData = data.map(item => {\r\n                if(item._id == result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setdata(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike',{\r\n            method:'put',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                postid:id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            const newData = data.map(item => {\r\n                if(item._id == result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setdata(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    const makecomment = (text,postid) => {\r\n        fetch('/comment',{\r\n            method:'put',\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postid,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            const newData = data.map(item => {\r\n                if(item._id == result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setdata(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    const deletepost = (postid) => {\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:'delete',\r\n            headers:{\r\n            \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            /* console.log(result) */\r\n            M.toast({html: \"Post Deleted\",classes:\"#d81b60 pink darken-1\"})\r\n            const newData = data.filter(item => {\r\n                return item._id !== result._id\r\n            })\r\n            setdata(newData)\r\n        })\r\n    }\r\n/*     const deletecomment = (commentid) => {\r\n        fetch(`/deletecomment/${commentid}`,{\r\n            method:'delete',\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(result)\r\n            M.toast({html: \"Comment Deleted\",classes:\"#d81b60 pink darken-1\"})\r\n            \r\n        })\r\n    } */\r\n    return (\r\n        <div className='home'>\r\n            {data.map(item => { \r\n                return (\r\n                    \r\n                    <div className=\"card homecard\" key={item._id}> \r\n                        <h5><Link to={state._id != item.postedby._id ? '/profile/'+item.postedby._id : '/profile'}>{item.postedby.name}</Link> {state._id == item.postedby._id ? <i className=\"material-icons\" title=\"delete post\" onClick={()=>deletepost(item._id)} style={{float:'right',cursor:'pointer'}}>close</i> : <i className=\"material-icons\" title=\"delete post\" style={{float:'right',cursor:'pointer'}}>report_problem</i>}</h5>\r\n                        <div className=\"card-image\">\r\n                            <img src={item.photo}/>\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            {item.likes.includes(state._id) ? <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={() => unlikePost(item._id)}>thumb_down</i> : <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={() => likePost(item._id)}>thumb_up</i> }\r\n                            <h6>{item.title}</h6>\r\n                            <h6>{item.likes.length} Likes</h6>\r\n                            {item.comments.map(record =>{\r\n                                return(\r\n                                <h6 key={record._id}><span style={{fontWeight:'bold'}}>{record.postedBy.name}</span> {record.text} {/* {state._id == record.postedBy._id ? <i className=\"material-icons\" title=\"Delete comment\" onClick={()=>deletecomment(item._id)} style={{float:'right',cursor:'pointer'}}>close</i> : <i className=\"material-icons\" title=\"Report comment\" style={{float:'right',cursor:'pointer'}}>report_problem</i>} */}</h6>\r\n                                )\r\n                            })}\r\n                            <form onSubmit ={(e)=>{\r\n                                e.preventDefault()\r\n                                makecomment(e.target[0].value,item._id)\r\n                            }}>\r\n                            <input type=\"text\" placeholder=\"add a comment\" />\r\n                            </form>\r\n                            \r\n                        </div>\r\n                    </div>        \r\n                ) \r\n            })}\r\n                  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\Profile.js",["70","71","72","73","74","75","76"],"C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\CreatePost.js",["77"],"import React,{useState,useEffect} from 'react'\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\nfunction CreatePost() {\r\n    const history = useHistory()\r\n    const [title, settitle] = useState('')\r\n    const [body, setbody] = useState('')\r\n    const [image, setimage] = useState('')\r\n    const [url, seturl] = useState('')\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/posts',{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem('jwt') \r\n            },\r\n            body: JSON.stringify({\r\n                //we are writing on name because key and value both are same\r\n                title,\r\n                body,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            if(data.error) {\r\n                M.toast({html: data.error,classes:\"#d81b60 pink darken-1\"})\r\n            }else{\r\n                M.toast({html: \"Post Updated\",classes:\"#d81b60 pink darken-1\"})\r\n                history.push('/')\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [url])\r\n    const postdetails = () => {\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"socialhub\")\r\n        data.append(\"cloud_name\",\"shivaish\")\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/shivasish/image/upload\",{\r\n            method: \"POST\",\r\n            body: data,\r\n        }).then(res=>res.json())\r\n        .then(data => {\r\n            seturl(data.url)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n        \r\n    }\r\n    return (\r\n        <div className='card input-filed' style={{margin:'30px auto' , maxWidth:'500px' , padding:'20px',textAlign:'center'}}>\r\n            <input type=\"text\" value={title} onChange={(e) => settitle(e.target.value)} placeholder=\"title\"/>\r\n            <input type=\"text\" value={body} onChange={(e) => setbody(e.target.value)} placeholder=\"Body\"/>\r\n            <div className=\"file-field input-field\">\r\n            <div className=\"btn\">\r\n                <span>Upload Image</span>\r\n                <input type=\"file\" onChange={(e) => setimage(e.target.files[0])}/>\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\"/>\r\n            </div>\r\n            </div>\r\n            <button onClick={postdetails} className=\"waves-effect waves-light btn #ad1457 pink darken-3\">Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\reducers\\userReducer.js",["78","79","80"],"export const initialState = null\r\nexport const reducer = (state,action) => {\r\n    if(action.type == \"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type == \"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type = \"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            followering:action.payload.following\r\n        }\r\n    }\r\n    return state\r\n}","C:\\Users\\Shivasish Dey\\Desktop\\MERN Project\\client\\src\\Components\\screens\\UserProfile.js",["81","82","83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":16,"column":10,"nodeType":"92","messageId":"93","endLine":16,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":25,"column":6,"nodeType":"96","endLine":25,"endColumn":8,"suggestions":"97"},{"ruleId":"90","severity":1,"message":"98","line":1,"column":24,"nodeType":"92","messageId":"93","endLine":1,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":6,"column":12,"nodeType":"92","messageId":"93","endLine":6,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":14,"column":23,"nodeType":"101","messageId":"102","endLine":14,"endColumn":24,"suggestions":"103"},{"ruleId":"99","severity":1,"message":"100","line":14,"column":48,"nodeType":"101","messageId":"102","endLine":14,"endColumn":49,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"100","line":11,"column":23,"nodeType":"101","messageId":"102","endLine":11,"endColumn":24,"suggestions":"105"},{"ruleId":"99","severity":1,"message":"100","line":11,"column":48,"nodeType":"101","messageId":"102","endLine":11,"endColumn":49,"suggestions":"106"},{"ruleId":"90","severity":1,"message":"107","line":6,"column":19,"nodeType":"92","messageId":"93","endLine":6,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":32,"column":29,"nodeType":"110","messageId":"111","endLine":32,"endColumn":31},{"ruleId":"108","severity":1,"message":"109","line":56,"column":29,"nodeType":"110","messageId":"111","endLine":56,"endColumn":31},{"ruleId":"108","severity":1,"message":"109","line":81,"column":29,"nodeType":"110","messageId":"111","endLine":81,"endColumn":31},{"ruleId":"108","severity":1,"message":"112","line":127,"column":49,"nodeType":"110","messageId":"111","endLine":127,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":127,"column":155,"nodeType":"110","messageId":"111","endLine":127,"endColumn":157},{"ruleId":"113","severity":1,"message":"114","line":129,"column":29,"nodeType":"115","endLine":129,"endColumn":52},{"ruleId":"90","severity":1,"message":"116","line":5,"column":12,"nodeType":"92","messageId":"93","endLine":5,"endColumn":21},{"ruleId":"90","severity":1,"message":"117","line":5,"column":23,"nodeType":"92","messageId":"93","endLine":5,"endColumn":35},{"ruleId":"90","severity":1,"message":"118","line":6,"column":12,"nodeType":"92","messageId":"93","endLine":6,"endColumn":21},{"ruleId":"90","severity":1,"message":"119","line":6,"column":23,"nodeType":"92","messageId":"93","endLine":6,"endColumn":35},{"ruleId":"90","severity":1,"message":"107","line":7,"column":19,"nodeType":"92","messageId":"93","endLine":7,"endColumn":27},{"ruleId":"113","severity":1,"message":"114","line":26,"column":21,"nodeType":"115","endLine":26,"endColumn":258},{"ruleId":"113","severity":1,"message":"114","line":41,"column":21,"nodeType":"115","endLine":41,"endColumn":77},{"ruleId":"94","severity":1,"message":"120","line":35,"column":8,"nodeType":"96","endLine":35,"endColumn":13,"suggestions":"121"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":20,"nodeType":"110","messageId":"111","endLine":3,"endColumn":22},{"ruleId":"108","severity":1,"message":"109","line":6,"column":20,"nodeType":"110","messageId":"111","endLine":6,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":9,"column":8,"nodeType":"124","messageId":"125","endLine":9,"endColumn":30},{"ruleId":"90","severity":1,"message":"91","line":7,"column":12,"nodeType":"92","messageId":"93","endLine":7,"endColumn":17},{"ruleId":"94","severity":1,"message":"126","line":20,"column":7,"nodeType":"96","endLine":20,"endColumn":9,"suggestions":"127"},{"ruleId":"108","severity":1,"message":"112","line":64,"column":82,"nodeType":"110","messageId":"111","endLine":64,"endColumn":84},{"ruleId":"113","severity":1,"message":"114","line":82,"column":21,"nodeType":"115","endLine":82,"endColumn":258},{"ruleId":"113","severity":1,"message":"114","line":101,"column":21,"nodeType":"115","endLine":101,"endColumn":77},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["130"],"'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["131","132"],["133","134"],["135","136"],["137","138"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'followers' is assigned a value but never used.","'setfollowers' is assigned a value but never used.","'following' is assigned a value but never used.","'setfollowing' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["139"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"messageId":"143","fix":"144","desc":"145"},{"messageId":"146","fix":"147","desc":"148"},{"messageId":"143","fix":"149","desc":"145"},{"messageId":"146","fix":"150","desc":"148"},{"messageId":"143","fix":"151","desc":"145"},{"messageId":"146","fix":"152","desc":"148"},{"messageId":"143","fix":"153","desc":"145"},{"messageId":"146","fix":"154","desc":"148"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [dispatch, history]",{"range":"159","text":"160"},"removeEscape",{"range":"161","text":"162"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"163","text":"164"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"165","text":"162"},{"range":"166","text":"164"},{"range":"167","text":"162"},{"range":"168","text":"164"},{"range":"169","text":"162"},{"range":"170","text":"164"},"Update the dependencies array to be: [body, history, title, url]",{"range":"171","text":"172"},"Update the dependencies array to be: [userid]",{"range":"173","text":"174"},[1011,1013],"[dispatch, history]",[483,484],"",[483,483],"\\",[508,509],[508,508],[398,399],[398,398],[423,424],[423,423],[1245,1250],"[body, history, title, url]",[714,716],"[userid]"]